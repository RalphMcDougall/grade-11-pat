/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package source;

import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JFrame;

/**
 *
 * @author Ralph McDougall 12/10/2017
 */
public class GUIHighScores extends JFrame {

    private JFrame parentGUI;
    
    /**
     * Creates new form GUIHighScores
     */
    public GUIHighScores(JFrame parentGUI) {
        initComponents();
        this.parentGUI = parentGUI;
        fixGUI();
        this.updateDisplay();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBackground = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        pnlDisplay = new javax.swing.JPanel();
        btnBack = new javax.swing.JButton();
        pnlDifficulty = new javax.swing.JPanel();
        cmbDifficulty = new javax.swing.JComboBox<>();
        lblDifficulty = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtareaScores = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(600, 600));

        pnlBackground.setBackground(new java.awt.Color(0, 0, 102));
        pnlBackground.setMaximumSize(new java.awt.Dimension(600, 600));
        pnlBackground.setMinimumSize(new java.awt.Dimension(600, 600));
        pnlBackground.setPreferredSize(new java.awt.Dimension(600, 600));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 10));

        jLabel1.setFont(new java.awt.Font("AR JULIAN", 0, 48)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("HIGH SCORES");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 540, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );

        btnBack.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        btnBack.setText("GO BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        cmbDifficulty.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        cmbDifficulty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "EASY", "MEDIUM", "HARD", "INSANE" }));
        cmbDifficulty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDifficultyActionPerformed(evt);
            }
        });

        lblDifficulty.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        lblDifficulty.setText("DIFFICULTY:");

        javax.swing.GroupLayout pnlDifficultyLayout = new javax.swing.GroupLayout(pnlDifficulty);
        pnlDifficulty.setLayout(pnlDifficultyLayout);
        pnlDifficultyLayout.setHorizontalGroup(
            pnlDifficultyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDifficultyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblDifficulty)
                .addGap(18, 18, 18)
                .addComponent(cmbDifficulty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlDifficultyLayout.setVerticalGroup(
            pnlDifficultyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDifficultyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDifficultyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDifficulty)
                    .addComponent(cmbDifficulty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtareaScores.setEditable(false);
        txtareaScores.setColumns(20);
        txtareaScores.setFont(new java.awt.Font("Courier New", 0, 13)); // NOI18N
        txtareaScores.setRows(5);
        txtareaScores.setText("Name\t\tScore\n----------------------\nRalph\t\t9001\nDave\t\t5\nGuy\t\t4\nSid\t\t3.1415926535\nPerson\t\t1\nNoob\t\t-1");
        txtareaScores.setCaretPosition(0);
        jScrollPane1.setViewportView(txtareaScores);

        javax.swing.GroupLayout pnlDisplayLayout = new javax.swing.GroupLayout(pnlDisplay);
        pnlDisplay.setLayout(pnlDisplayLayout);
        pnlDisplayLayout.setHorizontalGroup(
            pnlDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDisplayLayout.createSequentialGroup()
                .addGroup(pnlDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDisplayLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(pnlDisplayLayout.createSequentialGroup()
                        .addGroup(pnlDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlDisplayLayout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(pnlDifficulty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlDisplayLayout.createSequentialGroup()
                                .addGap(133, 133, 133)
                                .addComponent(btnBack)))
                        .addGap(0, 24, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlDisplayLayout.setVerticalGroup(
            pnlDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDisplayLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlDifficulty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnBack)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlBackgroundLayout = new javax.swing.GroupLayout(pnlBackground);
        pnlBackground.setLayout(pnlBackgroundLayout);
        pnlBackgroundLayout.setHorizontalGroup(
            pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(pnlDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlBackgroundLayout.setVerticalGroup(
            pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        closeGUI();
    }//GEN-LAST:event_btnBackActionPerformed

    private void cmbDifficultyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDifficultyActionPerformed
        this.updateDisplay();
    }//GEN-LAST:event_cmbDifficultyActionPerformed
    
    private void updateDisplay()
    {
        int currentDifficulty = cmbDifficulty.getSelectedIndex();
        
        String query = "SELECT PlayerName, Score FROM tblHighScores WHERE Difficulty = " + currentDifficulty + " ORDER BY Score DESC";
        try
        {
            String splitCharacter = "" + (char) 247;
            ResultSet rs = DBBridge.query(query);
            String s = DBBridge.processResultSet(rs, splitCharacter);
            
            String[] splitString = s.split(splitCharacter);
            
            int num_spaces = 0;
            
            for (int i = 0; i < splitString.length; i += 2)
            {
                if (splitString[i].length() > num_spaces)
                {
                    num_spaces = splitString[i].length();
                }
            }
            
            String display = "Name";
            for (int i = 0; i < num_spaces - 1; ++i)
            {
                display += " ";
            }
            
            display += "Score\n";
            
            for (int i = 0; i < num_spaces + 10; ++i)
            {
                display += "-";
            }
            display += "\n";
            
            for (int i = 0; i < splitString.length - 2; i += 2)
            {
                String line = "";
                line += splitString[i];
                
                for (int j = 0; j < num_spaces + 4 - splitString[i].length(); ++j)
                {
                    if (i == 0 && j == 0)
                    {
                        j = 1;
                    }
                    line += " ";
                }
                line += splitString[i + 1];
                display += line;
            }
            
            txtareaScores.setText(display);
        }
        catch(SQLException ex)
        {
            GameLogger.logError("The high scores could not be retrieved.");
            GameLogger.logError(ex.toString());
        }
        
        txtareaScores.setCaretPosition(0);
    }
    
    private void closeGUI()
    {
        GameLogger.logInfo("\"Go Back\" button pressed");
        this.parentGUI.setVisible(true);
        this.dispose();
    }
    
    private void fixGUI()
    {
        // Fixes the location and size of the GUI
        this.setResizable(false);
        this.setLocationRelativeTo(this.parentGUI);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JComboBox<String> cmbDifficulty;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDifficulty;
    private javax.swing.JPanel pnlBackground;
    private javax.swing.JPanel pnlDifficulty;
    private javax.swing.JPanel pnlDisplay;
    private javax.swing.JTextArea txtareaScores;
    // End of variables declaration//GEN-END:variables
}
